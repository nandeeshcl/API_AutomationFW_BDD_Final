<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="4414" started-at="2019-11-07T07:46:35Z" finished-at="2019-11-07T07:46:39Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunCuke@56ac3a89]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="4414" started-at="2019-11-07T07:46:35Z" finished-at="2019-11-07T07:46:39Z">
      <class name="Runner.RunCuke">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:Runner.RunCuke@56ac3a89]" name="setUpClass" is-config="true" duration-ms="94" started-at="2019-11-07T13:16:35Z" finished-at="2019-11-07T13:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunCuke@56ac3a89]" name="runScenario" duration-ms="2747" started-at="2019-11-07T13:16:35Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-11-07T13:16:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Create Customer API with valid auth key"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Test Customer API with different functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.RunCuke@56ac3a89]" name="runScenario" duration-ms="958" started-at="2019-11-07T13:16:38Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-11-07T13:16:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate Create Customer API with in-valid auth key"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Test Customer API with different functionality"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [21312] but found [Invalid API Key provided: sk_test_***************************alid]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [21312] but found [Invalid API Key provided: sk_test_***************************alid]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at StepDefnitions.Create_Customer_Test.the_response_contains_the_message(Create_Customer_Test.java:158)
	at âœ½.the response contains the message "21312"(./src/test/Feature_Files/Customer_API.feature:23)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:Runner.RunCuke@56ac3a89]" name="tearDownClass" is-config="true" duration-ms="42" started-at="2019-11-07T13:16:39Z" finished-at="2019-11-07T13:16:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.RunCuke -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
